type Query {
    # 获取根组织
    findRootOrganizations: OrganizationsRootResult
    # 获取所有组织
    findAllOrganizations: OrganizationsJsonResult
    # 获取指定组织下的所有子组织
    findChildrenOrganizations(id: Int!): OrganizationsJsonResult
}

type Mutation {
    # 创建组织，parentId 为空时，代表创建根组织
    createOrganization(name: String!, parentId: Int): UserModuleCommonResult
    # 更新组织
    updateOrganization(id: Int!, name: String!, parentId: Int!): UserModuleCommonResult
    # 删除组织
    deleteOrganization(id: Int!): UserModuleCommonResult
    # 给组织添加用户
    addUsersToOrganization(id: Int!, userIds: [Int]!): UserModuleCommonResult
    # 删除组织下的用户
    deleteUserFromOrganization(id: Int!, userIds: [Int]!): UserModuleCommonResult
}

type OrganizationsRootResult {
    # 状态码
    code: Int
    # 状态消息
    message: String
    # 返回数据
    data: [Organization]
}

type Organization {
    id: Int
    # 组织名称
    name: String
}

type OrganizationsJsonResult {
    # 状态码
    code: Int
    # 状态消息
    message: String
    # 返回数据
    data: JSON
}