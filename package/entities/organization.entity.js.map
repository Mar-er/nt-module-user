{"version":3,"sources":["../src/entities/organization.entity.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,qCAA6G;AAE7G,+CAAqC;AAIrC,IAAa,YAAY,GAAzB,MAAa,YAAY;CAexB,CAAA;AAbG;IADC,gCAAsB,EAAE;;wCACd;AAGX;IADC,gBAAM,EAAE;;0CACI;AAGb;IADC,oBAAU,CAAC,IAAI,CAAC,EAAE,CAAC,kBAAI,EAAE,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,aAAa,CAAC;;2CACvC;AAGd;IADC,oBAAU,EAAE;8BACL,YAAY;4CAAC;AAGrB;IADC,sBAAY,CAAC,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;;8CACP;AAdhB,YAAY;IAFxB,gBAAM,CAAC,cAAc,CAAC;IACtB,cAAI,CAAC,eAAe,CAAC;GACT,YAAY,CAexB;AAfY,oCAAY","file":"organization.entity.js","sourcesContent":["import { Column, Entity, ManyToMany, PrimaryGeneratedColumn, Tree, TreeChildren, TreeParent } from 'typeorm';\n\nimport { User } from './user.entity';\n\n@Entity('organization')\n@Tree('closure-table')\nexport class Organization {\n    @PrimaryGeneratedColumn()\n    id: number;\n\n    @Column()\n    name: string;\n\n    @ManyToMany(type => User, user => user.organizations)\n    users: User[];\n\n    @TreeParent()\n    parent: Organization;\n\n    @TreeChildren({ cascade: true })\n    children: Organization[];\n}"]}