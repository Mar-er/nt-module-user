{"version":3,"sources":["../src/entities/permission.entity.ts"],"names":[],"mappings":"AAEA,OAAO,EAAE,QAAQ,EAAE,MAAM,mBAAmB,CAAC;AAC7C,OAAO,EAAE,IAAI,EAAE,MAAM,eAAe,CAAC;AAErC,qBACa,UAAU;IAEnB,EAAE,EAAE,MAAM,CAAC;IAGX,IAAI,EAAE,MAAM,CAAC;IAKb,QAAQ,EAAE,QAAQ,CAAC;IAGnB,MAAM,EAAE,MAAM,CAAC;IAKf,QAAQ,EAAE,MAAM,CAAC;IAGjB,KAAK,EAAE,IAAI,EAAE,CAAC;CACjB","file":"permission.entity.d.ts","sourcesContent":["import { Column, Entity, ManyToMany, ManyToOne, PrimaryGeneratedColumn } from 'typeorm';\n\nimport { Resource } from './resource.entity';\nimport { Role } from './role.entity';\n\n@Entity('permission')\nexport class Permission {\n    @PrimaryGeneratedColumn()\n    id: number;\n\n    @Column()\n    name: string;\n\n    @ManyToOne(type => Resource, resource => resource.permissions, {\n        onDelete: 'CASCADE'\n    })\n    resource: Resource;\n\n    @Column()\n    action: string;\n\n    @Column({\n        unique: true\n    })\n    identify: string;\n\n    @ManyToMany(type => Role, role => role.permissions)\n    roles: Role[];\n}"]}