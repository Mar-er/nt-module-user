{"version":3,"sources":["../src/entities/role.entity.ts"],"names":[],"mappings":"AAEA,OAAO,EAAE,SAAS,EAAE,MAAM,qBAAqB,CAAC;AAChD,OAAO,EAAE,UAAU,EAAE,MAAM,qBAAqB,CAAC;AACjD,OAAO,EAAE,IAAI,EAAE,MAAM,eAAe,CAAC;AAErC,qBACa,IAAI;IAEb,EAAE,EAAE,MAAM,CAAC;IAKX,IAAI,EAAE,MAAM,CAAC;IAMb,WAAW,EAAE,UAAU,EAAE,CAAC;IAG1B,KAAK,EAAE,IAAI,EAAE,CAAC;IAGd,SAAS,EAAE,SAAS,CAAC;CACxB","file":"role.entity.d.ts","sourcesContent":["import { Column, Entity, JoinTable, ManyToMany, OneToOne, PrimaryGeneratedColumn } from 'typeorm';\n\nimport { InfoGroup } from './info-group.entity';\nimport { Permission } from './permission.entity';\nimport { User } from './user.entity';\n\n@Entity('role')\nexport class Role {\n    @PrimaryGeneratedColumn()\n    id: number;\n\n    @Column({\n        unique: true\n    })\n    name: string;\n\n    @ManyToMany(type => Permission, permission => permission.roles, {\n        onDelete: 'CASCADE'\n    })\n    @JoinTable()\n    permissions: Permission[];\n\n    @ManyToMany(type => User, user => user.roles)\n    users: User[];\n\n    @OneToOne(type => InfoGroup, infoGroup => infoGroup.role)\n    infoGroup: InfoGroup;\n}"]}