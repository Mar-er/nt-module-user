{"version":3,"sources":["../src/resolvers/info-item.resolver.ts"],"names":[],"mappings":"AAKA,OAAO,EAAE,QAAQ,EAAE,MAAM,8BAA8B,CAAC;AACxD,OAAO,EAAE,YAAY,EAAE,MAAM,uCAAuC,CAAC;AACrE,OAAO,EAAE,mBAAmB,EAAE,MAAM,mCAAmC,CAAC;AACxE,OAAO,EAAE,eAAe,EAAE,MAAM,+BAA+B,CAAC;AAEhE,qBAEa,gBAAgB;IAEI,OAAO,CAAC,QAAQ,CAAC,eAAe;gBAAf,eAAe,EAAE,eAAe;IAKxE,cAAc,CAAC,GAAG,KAAA,EAAE,IAAI,EAAE;QAAE,aAAa,EAAE,QAAQ,CAAA;KAAE,GAAG,OAAO,CAAC,YAAY,CAAC;IAO7E,cAAc,CAAC,GAAG,KAAA,EAAE,IAAI,EAAE;QAAE,UAAU,EAAE,MAAM,CAAA;KAAE,GAAG,OAAO,CAAC,YAAY,CAAC;IAOxE,cAAc,CAAC,GAAG,KAAA,EAAE,IAAI,EAAE;QAAE,mBAAmB,EAAE,mBAAmB,CAAA;KAAE,GAAG,OAAO,CAAC,YAAY,CAAC;IAO9F,eAAe,IAAI,OAAO,CAAC,YAAY,CAAC;CAIjD","file":"info-item.resolver.d.ts","sourcesContent":["import { Inject } from '@nestjs/common';\nimport { Mutation, Query, Resolver } from '@nestjs/graphql';\nimport { __ as t } from 'i18n';\n\nimport { Permission, Resource } from '../decorators';\nimport { InfoItem } from '../entities/info-item.entity';\nimport { CommonResult } from '../interfaces/common-result.interface';\nimport { UpdateInfoItemInput } from '../interfaces/info-item.interface';\nimport { InfoItemService } from '../services/info-item.service';\n\n@Resolver()\n@Resource({ name: 'info_item_manage', identify: 'infoItem:manage' })\nexport class InfoItemResolver {\n    constructor(\n        @Inject(InfoItemService) private readonly infoItemService: InfoItemService\n    ) { }\n\n    @Mutation('createInfoItem')\n    @Permission({ name: 'create_info_item', identify: 'infoItem:createInfoItem', action: 'create' })\n    async createInfoItem(req, body: { infoItemInput: InfoItem }): Promise<CommonResult> {\n        await this.infoItemService.create(body.infoItemInput);\n        return { code: 200, message: t('Create information item successfully') };\n    }\n\n    @Mutation('deleteInfoItem')\n    @Permission({ name: 'delete_info_item', identify: 'infoItem:deleteInfoItem', action: 'delete' })\n    async deleteInfoItem(req, body: { infoItemId: number }): Promise<CommonResult> {\n        await this.infoItemService.delete(body.infoItemId);\n        return { code: 200, message: t('Delete information item successfully') };\n    }\n\n    @Mutation('updateInfoItem')\n    @Permission({ name: 'update_info_item', identify: 'infoItem:updateInfoItem', action: 'update' })\n    async updateInfoItem(req, body: { updateInfoItemInput: UpdateInfoItemInput }): Promise<CommonResult> {\n        await this.infoItemService.update(body.updateInfoItemInput);\n        return { code: 200, message: t('Update information item successfully') };\n    }\n\n    @Query('findAllInfoItem')\n    @Permission({ name: 'find_all_info_item', identify: 'infoItem:findAllInfoItem', action: 'find' })\n    async findAllInfoItem(): Promise<CommonResult> {\n        const data = await this.infoItemService.findAll();\n        return { code: 200, message: t('Query all information items successfully'), data };\n    }\n}"]}