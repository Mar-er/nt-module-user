{"version":3,"sources":["../src/resolvers/info-item.resolver.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AAAA,2CAAwC;AACxC,6CAA4D;AAC5D,+BAA+B;AAE/B,8CAAqD;AAIrD,qEAAgE;AAIhE,IAAa,gBAAgB,GAA7B,MAAa,gBAAgB;IACzB,YAC8C,eAAgC;QAAhC,oBAAe,GAAf,eAAe,CAAiB;IAC1E,CAAC;IAIL,KAAK,CAAC,cAAc,CAAC,GAAG,EAAE,IAAiC;QACvD,MAAM,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;QACtD,OAAO,EAAE,IAAI,EAAE,GAAG,EAAE,OAAO,EAAE,SAAC,CAAC,sCAAsC,CAAC,EAAE,CAAC;IAC7E,CAAC;IAID,KAAK,CAAC,cAAc,CAAC,GAAG,EAAE,IAA4B;QAClD,MAAM,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QACnD,OAAO,EAAE,IAAI,EAAE,GAAG,EAAE,OAAO,EAAE,SAAC,CAAC,sCAAsC,CAAC,EAAE,CAAC;IAC7E,CAAC;IAID,KAAK,CAAC,cAAc,CAAC,GAAG,EAAE,IAAkD;QACxE,MAAM,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;QAC5D,OAAO,EAAE,IAAI,EAAE,GAAG,EAAE,OAAO,EAAE,SAAC,CAAC,sCAAsC,CAAC,EAAE,CAAC;IAC7E,CAAC;IAID,KAAK,CAAC,eAAe;QACjB,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,eAAe,CAAC,OAAO,EAAE,CAAC;QAClD,OAAO,EAAE,IAAI,EAAE,GAAG,EAAE,OAAO,EAAE,SAAC,CAAC,0CAA0C,CAAC,EAAE,IAAI,EAAE,CAAC;IACvF,CAAC;CACJ,CAAA;AAzBG;IAFC,kBAAQ,CAAC,gBAAgB,CAAC;IAC1B,uBAAU,CAAC,EAAE,IAAI,EAAE,kBAAkB,EAAE,QAAQ,EAAE,yBAAyB,EAAE,MAAM,EAAE,QAAQ,EAAE,CAAC;;;;sDAI/F;AAID;IAFC,kBAAQ,CAAC,gBAAgB,CAAC;IAC1B,uBAAU,CAAC,EAAE,IAAI,EAAE,kBAAkB,EAAE,QAAQ,EAAE,yBAAyB,EAAE,MAAM,EAAE,QAAQ,EAAE,CAAC;;;;sDAI/F;AAID;IAFC,kBAAQ,CAAC,gBAAgB,CAAC;IAC1B,uBAAU,CAAC,EAAE,IAAI,EAAE,kBAAkB,EAAE,QAAQ,EAAE,yBAAyB,EAAE,MAAM,EAAE,QAAQ,EAAE,CAAC;;;;sDAI/F;AAID;IAFC,eAAK,CAAC,iBAAiB,CAAC;IACxB,uBAAU,CAAC,EAAE,IAAI,EAAE,oBAAoB,EAAE,QAAQ,EAAE,0BAA0B,EAAE,MAAM,EAAE,MAAM,EAAE,CAAC;;;;uDAIhG;AA/BQ,gBAAgB;IAF5B,kBAAQ,EAAE;IACV,qBAAQ,CAAC,EAAE,IAAI,EAAE,kBAAkB,EAAE,QAAQ,EAAE,iBAAiB,EAAE,CAAC;IAG3D,WAAA,eAAM,CAAC,mCAAe,CAAC,CAAA;qCAAmC,mCAAe;GAFrE,gBAAgB,CAgC5B;AAhCY,4CAAgB","file":"info-item.resolver.js","sourcesContent":["import { Inject } from '@nestjs/common';\nimport { Mutation, Query, Resolver } from '@nestjs/graphql';\nimport { __ as t } from 'i18n';\n\nimport { Permission, Resource } from '../decorators';\nimport { InfoItem } from '../entities/info-item.entity';\nimport { CommonResult } from '../interfaces/common-result.interface';\nimport { UpdateInfoItemInput } from '../interfaces/info-item.interface';\nimport { InfoItemService } from '../services/info-item.service';\n\n@Resolver()\n@Resource({ name: 'info_item_manage', identify: 'infoItem:manage' })\nexport class InfoItemResolver {\n    constructor(\n        @Inject(InfoItemService) private readonly infoItemService: InfoItemService\n    ) { }\n\n    @Mutation('createInfoItem')\n    @Permission({ name: 'create_info_item', identify: 'infoItem:createInfoItem', action: 'create' })\n    async createInfoItem(req, body: { infoItemInput: InfoItem }): Promise<CommonResult> {\n        await this.infoItemService.create(body.infoItemInput);\n        return { code: 200, message: t('Create information item successfully') };\n    }\n\n    @Mutation('deleteInfoItem')\n    @Permission({ name: 'delete_info_item', identify: 'infoItem:deleteInfoItem', action: 'delete' })\n    async deleteInfoItem(req, body: { infoItemId: number }): Promise<CommonResult> {\n        await this.infoItemService.delete(body.infoItemId);\n        return { code: 200, message: t('Delete information item successfully') };\n    }\n\n    @Mutation('updateInfoItem')\n    @Permission({ name: 'update_info_item', identify: 'infoItem:updateInfoItem', action: 'update' })\n    async updateInfoItem(req, body: { updateInfoItemInput: UpdateInfoItemInput }): Promise<CommonResult> {\n        await this.infoItemService.update(body.updateInfoItemInput);\n        return { code: 200, message: t('Update information item successfully') };\n    }\n\n    @Query('findAllInfoItem')\n    @Permission({ name: 'find_all_info_item', identify: 'infoItem:findAllInfoItem', action: 'find' })\n    async findAllInfoItem(): Promise<CommonResult> {\n        const data = await this.infoItemService.findAll();\n        return { code: 200, message: t('Query all information items successfully'), data };\n    }\n}"]}