{"version":3,"sources":["../src/resolvers/user.resolver.ts"],"names":[],"mappings":"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","file":"user.resolver.js","sourcesContent":["import { HttpException, Inject } from '@nestjs/common';\nimport { Mutation, Query, Resolver } from '@nestjs/graphql';\nimport { __ as t } from 'i18n';\n\nimport { Permission, Resource } from '../decorators';\nimport { CommonResult } from '../interfaces/common-result.interface';\nimport { CreateUserInput, UpdateUserInput, UserInfoData } from '../interfaces/user.interface';\nimport { UserService } from '../services/user.service';\n\n@Resolver()\n@Resource({ name: 'user_manage', identify: 'user:manage' })\nexport class UserResolver {\n    constructor(\n        @Inject(UserService) private readonly userService: UserService\n    ) { }\n\n    @Query('login')\n    async login(req, body: { username: string, password: string }): Promise<CommonResult> {\n        const data = await this.userService.login(body.username, body.password);\n        return { code: 200, message: t('Login success'), data: data.tokenInfo };\n    }\n\n    @Query('adminLogin')\n    async adminLogin(req, body: { username: string, password: string }): Promise<CommonResult> {\n        const data = await this.userService.login(body.username, body.password);\n        const userInfoData = data.userInfoData;\n        if (userInfoData.username !== 'sadmin' && userInfoData.userRoles.map(v => v.id).includes(1)) {\n            throw new HttpException(t('You are not authorized to access'), 401);\n        }\n        return { code: 200, message: t('Login success'), data: data.tokenInfo };\n    }\n\n    @Mutation('register')\n    async register(req, body: { registerUserInput: CreateUserInput }): Promise<CommonResult> {\n        await this.userService.register(body.registerUserInput);\n        return { code: 200, message: t('Registration success') };\n    }\n\n    @Mutation('createUser')\n    @Permission({ name: 'create_user', identify: 'user:createUser', action: 'create' })\n    async createUser(req, body: { createUserInput: CreateUserInput }): Promise<CommonResult> {\n        await this.userService.createUser(body.createUserInput);\n        return { code: 200, message: t('Create user successfully') };\n    }\n\n    @Mutation('addUserRole')\n    @Permission({ name: 'add_user_role', identify: 'user:addUserRole', action: 'create' })\n    async addUserRole(req, body: { userId: number, roleId: number }): Promise<CommonResult> {\n        await this.userService.addUserRole(body.userId, body.roleId);\n        return { code: 200, message: t('Add user role successfully') };\n    }\n\n    @Mutation('deleteUserRole')\n    @Permission({ name: 'delete_user_role', identify: 'user:deleteUserRole', action: 'delete' })\n    async deleteUserRole(req, body: { userId: number, roleId: number }): Promise<CommonResult> {\n        await this.userService.deleteUserRole(body.userId, body.roleId);\n        return { code: 200, message: t('Delete user role successfully') };\n    }\n\n    @Mutation('banUser')\n    @Permission({ name: 'ban_user', identify: 'user:banUser', action: 'update' })\n    async banUser(req, body: { userId: number }): Promise<CommonResult> {\n        await this.userService.recycleOrBanUser(body.userId, 'recycle');\n        return { code: 200, message: t('Ban user successfully') };\n    }\n\n    @Mutation('recycleUser')\n    @Permission({ name: 'recycle_user', identify: 'user:recycleUser', action: 'update' })\n    async recycleUser(req, body: { userId: number }): Promise<CommonResult> {\n        await this.userService.recycleOrBanUser(body.userId, 'recycle');\n        return { code: 200, message: t('Delete user to recycle bin successfully') };\n    }\n\n    @Mutation('deleteRecycledUser')\n    @Permission({ name: 'delete_recycled_user', identify: 'user:deleteRecycledUser', action: 'delete' })\n    async deleteRecycledUser(req, body: { userId: number }): Promise<CommonResult> {\n        await this.userService.deleteUser(body.userId);\n        return { code: 200, message: t('Delete user in the recycle bin successfully') };\n    }\n\n    @Mutation('revertBannedUser')\n    @Permission({ name: 'revert_banned_user', identify: 'user:revertBannedUser', action: 'update' })\n    async revertBannedUser(req, body: { userId: number }): Promise<CommonResult> {\n        await this.userService.revertBannedOrRecycledUser(body.userId, 'banned');\n        return { code: 200, message: t('Revert banned user successfully') };\n    }\n\n    @Mutation('revertRecycledUser')\n    @Permission({ name: 'revert_recycled_user', identify: 'user:revertRecycledUser', action: 'update' })\n    async revertRecycledUser(req, body: { userId: number }): Promise<CommonResult> {\n        await this.userService.revertBannedOrRecycledUser(body.userId, 'recycled');\n        return { code: 200, message: t('Revert recycled user successfully') };\n    }\n\n    @Mutation('updateUserInfoById')\n    @Permission({ name: 'update_user_info_by_id', identify: 'user:updateUserInfoById', action: 'update' })\n    async updateUserInfo(req, body: { userId: number, updateUserInput: UpdateUserInput }): Promise<CommonResult> {\n        await this.userService.updateUserInfo(body.userId, body.updateUserInput);\n        return { code: 200, message: t('Update user information successfully') };\n    }\n\n    @Mutation('updateCurrentUserInfo')\n    async updateCurrentUserInfo(req, body: { updateCurrentUserInput: UpdateUserInput }, context): Promise<CommonResult> {\n        await this.userService.updateUserInfo(context.user.id, body.updateCurrentUserInput);\n        return { code: 200, message: t('Update current login user information successfully') };\n    }\n\n    @Query('findUserInfoByIds')\n    @Permission({ name: 'find_user_info_by_ids', identify: 'user:findUserInfoByIds', action: 'find' })\n    async findUserInfoById(req, body: { userIds: number[] }): Promise<CommonResult> {\n        const data = await this.userService.findUserInfoById(body.userIds) as UserInfoData[];\n        return { code: 200, message: t('Query the specified users information successfully'), data };\n    }\n\n    @Query('findCurrentUserInfo')\n    async findCurrentUserInfo(req, body, context): Promise<CommonResult> {\n        const data = await this.userService.findUserInfoById(context.user.id) as UserInfoData;\n        return { code: 200, message: t('Query the current login user information successfully'), data };\n    }\n\n    @Query('findRegisterUserInfoItem')\n    async findRegisterUserInputInfo(): Promise<CommonResult> {\n        const data = await this.userService.findOneWithInfoItemsByRoleIds([1]);\n        return { code: 200, message: t('Query user registration information item successfully'), data };\n    }\n\n    @Query('findUsersInRole')\n    @Permission({ name: 'find_users_in_role', identify: 'user:findUsersInRole', action: 'find' })\n    async findUsersInRole(req, body: { roleId: number }): Promise<CommonResult> {\n        const data = await this.userService.findByRoleId(body.roleId);\n        return { code: 200, message: t('Query the user under the role successfully'), data };\n    }\n\n    @Query('findUsersInOrganization')\n    @Permission({ name: 'find_users_in_organization', identify: 'user:findUsersInOrganization', action: 'find' })\n    async findUsersInOrganization(req, body: { organizationId: number }): Promise<CommonResult> {\n        const data = await this.userService.findByOrganizationId(body.organizationId);\n        return { code: 200, message: t('Query users under the organization successfully'), data };\n    }\n}"]}