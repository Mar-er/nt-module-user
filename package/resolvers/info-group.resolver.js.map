{"version":3,"sources":["../src/resolvers/info-group.resolver.ts"],"names":[],"mappings":"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","file":"info-group.resolver.js","sourcesContent":["import { Inject } from '@nestjs/common';\nimport { Mutation, Query, Resolver } from '@nestjs/graphql';\nimport { __ as t } from 'i18n';\n\nimport { Permission, Resource } from '../decorators';\nimport { CommonResult } from '../interfaces/common-result.interface';\nimport { InfoGroupService } from '../services/info-group.service';\n\n@Resolver()\n@Resource({ name: 'info_group_manage', identify: 'infoGroup:manage' })\nexport class InfoGroupResolver {\n    constructor(\n        @Inject(InfoGroupService) private readonly infoGroupService: InfoGroupService\n    ) { }\n\n    @Mutation('createInfoGroup')\n    @Permission({ name: 'create_info_group', identify: 'infoGroup:createInfoGroup', action: 'create' })\n    async createInfoGroup(req, body: { name: string, roleId: number }): Promise<CommonResult> {\n        await this.infoGroupService.create(body.name, body.roleId);\n        return { code: 200, message: t('Create a information group successfully') };\n    }\n\n    @Mutation('deleteInfoGroup')\n    @Permission({ name: 'delete_info_group', identify: 'infoGroup:deleteInfoGroup', action: 'delete' })\n    async deleteInfoGroup(req, body: { groupId: number }): Promise<CommonResult> {\n        await this.infoGroupService.delete(body.groupId);\n        return { code: 200, message: t('Deleted the information group successfully') };\n    }\n\n    @Mutation('updateInfoGroup')\n    @Permission({ name: 'update_info_group', identify: 'infoGroup:updateInfoGroup', action: 'update' })\n    async updateInfoGroup(req, body: { groupId: number, name: string, roleId: number }): Promise<CommonResult> {\n        await this.infoGroupService.update(body.groupId, body.name, body.roleId);\n        return { code: 200, message: t('Update the information group successfully') };\n    }\n\n    @Mutation('addInfoItemToInfoGroup')\n    @Permission({ name: 'add_info_item_to_info_group', identify: 'infoGroup:addInfoItemToInfoGroup', action: 'create' })\n    async addInfoItemToInfoGroup(req, body: { infoGroupId: number, infoItemIds: number[] }): Promise<CommonResult> {\n        await this.infoGroupService.addInfoItem(body.infoGroupId, body.infoItemIds);\n        return { code: 200, message: t('Add an information item to the information group successfully') };\n    }\n\n    @Mutation('deleteIntoItemFromInfoGroup')\n    @Permission({ name: 'delete_into_item_from_info_group', identify: 'infoGroup:deleteIntoItemFromInfoGroup', action: 'delete' })\n    async deleteIntoItemFromInfoGroup(req, body: { infoGroupId: number, infoItemIds: number[] }): Promise<CommonResult> {\n        await this.infoGroupService.deleteIntoItem(body.infoGroupId, body.infoItemIds);\n        return { code: 200, message: t('Delete the information item in the information group successfully') };\n    }\n\n    @Query('findAllInfoGroup')\n    @Permission({ name: 'find_all_info_group', identify: 'infoGroup:findAllInfoGroup', action: 'find' })\n    async findAllInfoGroup(): Promise<CommonResult> {\n        const data = await this.infoGroupService.findAll();\n        return { code: 200, message: t('Query all information groups successfully'), data };\n    }\n\n    @Query('findInfoItemsByGroupId')\n    @Permission({ name: 'find_info_items_by_group_id', identify: 'infoGroup:findInfoItemsByGroupId', action: 'find' })\n    async findInfoItemsByGroupId(req, body: { groupId: number }): Promise<CommonResult> {\n        const data = await this.infoGroupService.findItemsById(body.groupId);\n        return { code: 200, message: t('Query the information item in the information group successfully'), data };\n    }\n}"]}