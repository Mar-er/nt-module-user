{"version":3,"sources":["../src/utils/crypto.util.ts"],"names":[],"mappings":"AAMA,qBACa,UAAU;IAOb,eAAe,CAAC,QAAQ,EAAE,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC;IAUlD,aAAa,CAAC,QAAQ,EAAE,MAAM,EAAE,YAAY,EAAE,MAAM,GAAG,OAAO,CAAC,OAAO,CAAC;CAGhF","file":"crypto.util.d.ts","sourcesContent":["import { Injectable } from '@nestjs/common';\nimport * as bcrypt from 'bcryptjs';\n\n/**\n * Crypto util\n */\n@Injectable()\nexport class CryptoUtil {\n\n    /**\n     * Encrypt the password\n     *\n     * @param password password\n     */\n    async encryptPassword(password: string): Promise<string> {\n        return bcrypt.hash(password, bcrypt.genSaltSync());\n    }\n\n    /**\n     * Check if the password is correct\n     *\n     * @param password password\n     * @param passwordHash password of hash\n     */\n    async checkPassword(password: string, passwordHash: string): Promise<boolean> {\n        return bcrypt.compare(password, passwordHash);\n    }\n}"]}