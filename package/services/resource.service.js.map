{"version":3,"sources":["../src/services/resource.service.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AAAA,2CAA4C;AAC5C,6CAAmD;AACnD,qCAAqC;AAErC,iEAAuD;AAGvD,IAAa,eAAe,GAA5B,MAAa,eAAe;IACxB,YACiD,WAAiC;QAAjC,gBAAW,GAAX,WAAW,CAAsB;IAC9E,CAAC;IAEL,KAAK,CAAC,aAAa,CAAC,QAAgB;QAChC,OAAO,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,EAAE,MAAM,EAAE,EAAE,EAAE,EAAE,QAAQ,EAAE,EAAE,EAAE,SAAS,EAAE,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;IACtG,CAAC;CACJ,CAAA;AARY,eAAe;IAD3B,mBAAU,EAAE;IAGJ,WAAA,0BAAgB,CAAC,0BAAQ,CAAC,CAAA;qCAA+B,oBAAU;GAF/D,eAAe,CAQ3B;AARY,0CAAe","file":"resource.service.js","sourcesContent":["import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\n\nimport { Resource } from '../entities/resource.entity';\n\n@Injectable()\nexport class ResourceService {\n    constructor(\n        @InjectRepository(Resource) private readonly resourceRep: Repository<Resource>\n    ) { }\n\n    async findResources(moduleId: number) {\n        return this.resourceRep.find({ where: { module: { id: moduleId } }, relations: ['permissions'] });\n    }\n}"]}