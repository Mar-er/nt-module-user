{"version":3,"sources":["../src/services/entity-check.service.ts"],"names":[],"mappings":"AAGA,OAAO,EAAE,aAAa,EAAE,MAAM,SAAS,CAAC;AAExC,qBACa,kBAAkB;IAEA,OAAO,CAAC,aAAa;gBAAb,aAAa,EAAE,aAAa;IAGzD,cAAc,CAAC,WAAW,EAAE,GAAG,EAAE,IAAI,EAAE,MAAM;CAMtD","file":"entity-check.service.d.ts","sourcesContent":["import { HttpException, Injectable } from '@nestjs/common';\nimport { InjectEntityManager } from '@nestjs/typeorm';\nimport { __ as t } from 'i18n';\nimport { EntityManager } from 'typeorm';\n\n@Injectable()\nexport class EntityCheckService {\n    constructor(\n        @InjectEntityManager() private entityManager: EntityManager\n    ) { }\n\n    async checkNameExist(entityClass: any, name: string) {\n        const exist = await this.entityManager.findOne(entityClass, { name });\n        if (exist) {\n            throw new HttpException(t('Name already exists'), 409);\n        }\n    }\n}"]}